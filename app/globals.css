/* stylelint-disable at-rule-no-unknown */
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 17, 17, 17;
  --background-rgb: 255, 255, 227;
  --code-bg: 30, 30, 30;
  --code-text: 220, 220, 220;
}

@layer base {
  body {
    font-family: 'et-book', Palatino, 'Palatino Linotype', 'Palatino LT STD', 'Book Antiqua', Georgia, serif;
    color: rgb(var(--foreground-rgb));
    background: rgb(var(--background-rgb));
    font-feature-settings: 'ss01', 'ss02', 'cv01', 'cv02', 'cv03';
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    letter-spacing: -0.015em;
    font-size: 17px;
    line-height: 1.6;
  }

  @media (min-width: 768px) {
    body {
      font-size: 18px;
    }
  }
}

.breadcrumb {
  display: flex;
  gap: 0.75rem;
  align-items: baseline;
  font-size: 1.25rem;
  line-height: 1.75rem;
  color: rgba(17, 17, 17, 0.6);
  font-weight: 450;
  margin-bottom: 2rem;
}

.breadcrumb a {
  color: #e5383b;
  text-decoration: none;
  transition: all 0.2s ease;
}

.breadcrumb a:hover {
  color: #c72c2f;
}

.breadcrumb span {
  color: rgba(17, 17, 17, 0.6);
}

.prose {
  font-size: 1rem;
  line-height: 1.7;
  letter-spacing: -0.011em;
}

.prose p {
  margin-bottom: 1.75em;
  font-weight: 400;
}

@media (min-width: 768px) {
  .prose {
    font-size: 1.13rem;
  }
}

::-webkit-scrollbar {
  height: 14px; /* Increased horizontal scrollbar thickness */
  width: 12px; /* Increased vertical scrollbar thickness */
}

::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 8px;
}

::-webkit-scrollbar-thumb {
  background: #aaa; /* Darker color for better visibility */
  border-radius: 8px;
  border: 2px solid rgb(var(--background-rgb)); /* Border to create inset effect */
  min-height: 40px; /* Ensure minimum thumb size */
}

::-webkit-scrollbar-thumb:hover {
  background: #888; /* Even darker on hover for better feedback */
}

/* Styles for LaTeX rendering */
.katex {
  color: rgb(var(--foreground-rgb)) !important;
}

.katex-html {
  color: rgb(var(--foreground-rgb)) !important;
}

/* Code block styling */
pre {
  position: relative;
  background-color: rgb(var(--code-bg)) !important;
  color: rgb(var(--code-text)) !important;
  border-radius: 0.5rem;
  margin: 1.5rem 0;
  padding: 1rem;
  overflow-x: auto;
}

code {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 1rem !important; /* Increased from 0.9rem */
  color: rgb(var(--code-text));
}

pre > code {
  display: block;
  padding: 0.75rem 0;
  font-size: 1.05rem !important; /* Increased for better readability */
  line-height: 1.6;
}

/* Code copy button */
.code-block {
  position: relative;
}

.copy-button {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  padding: 0.25rem 0.5rem;
  background-color: rgba(255, 255, 255, 0.1);
  border: none;
  border-radius: 0.25rem;
  color: #d1d1d1;
  font-size: 0.8rem;
  cursor: pointer;
  transition: all 0.2s ease;
  opacity: 0;
}

.code-block:hover .copy-button {
  opacity: 1;
}

.copy-button:hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.copy-button.copied {
  background-color: #4ade80;
  color: #1e1e1e;
}

/* Fix syntax highlighting colors */
.hljs-keyword, 
.hljs-selector-tag, 
.hljs-built_in, 
.hljs-name, 
.hljs-tag {
  color: #cc99cd;
}

.hljs-string, 
.hljs-title, 
.hljs-section, 
.hljs-attribute, 
.hljs-literal, 
.hljs-template-tag, 
.hljs-template-variable, 
.hljs-type, 
.hljs-addition {
  color: #7ec699;
}

.hljs-comment, 
.hljs-quote, 
.hljs-meta, 
.hljs-bullet {
  color: #999;
}

.hljs-number, 
.hljs-symbol, 
.hljs-variable, 
.hljs-template-variable, 
.hljs-literal, 
.hljs-deletion {
  color: #f08d49;
}

/* Ensure bullet points and list items have the correct color */
ul, ol, li {
  color: rgb(var(--foreground-rgb));
}

/* Explicitly set the bullet color */
ul li::marker, 
ol li::marker {
  color: rgb(var(--foreground-rgb));
}

/* Fix for bold, strong, italic, emphasis and underlined text */
b, strong, i, em, u, ins, mark {
  color: rgb(var(--foreground-rgb));
}

/* Ensure consistency in nested elements */
* {
  color: inherit;
}